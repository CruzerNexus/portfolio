{"version":3,"sources":["assets/Greg.jpg","components/navigation/Header.js","components/Hero.js","components/navigation/Footer.js","pages/Home.js","components/Info.js","pages/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","HeadBar","react_default","a","createElement","dist","className","react_router_dom","to","Hero","src","Greg","alt","FootBar","id","href","Home","Fragment","navigation_Header","src_components_Hero","navigation_Footer","Info","index_es","icon","faGithubSquare","size","faLinkedin","type","placeholder","Contact","src_components_Info","App","react_router","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.864a51db.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Greg.56145910.jpg\";","import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { Navbar, Button } from \"react-bulma-components\";\r\n\r\nimport './Header.css'\r\n\r\nconst HeadBar = () => (\r\n    <Navbar className=\"Header\">\r\n        <div className=\"Content\">\r\n            <h1 className=\"Name\">Greg \"Cruzer\" Cruz</h1>\r\n            <div>\r\n                <Link to=\"/\"><Button>Home</Button></Link>\r\n                <Link to=\"/Contact\"><Button>Contact</Button></Link>\r\n            </div>\r\n        </div>\r\n    </Navbar>\r\n);\r\n\r\nexport default HeadBar;\r\n","import React from \"react\";\r\n\r\nimport Greg from '../assets/Greg.jpg'\r\nimport './Hero.css'\r\n\r\nconst Hero = () => (\r\n  <div>\r\n    <div className=\"Hero\">\r\n      <h1 className=\"Hero-message\">When the Sky isn't the Limit...</h1>\r\n      <img src={ Greg } alt='Greg Cruz'/>\r\n      <div className=\"Hero-body\">\r\n        <p>My name is Greg Cruz.</p>\r\n        <p>I'm a software developer, prose writer, and major gaming enthusiast including (but not limited to) video gaming, VR, Wargaming, RPGs, and general tabletop gaming.</p>\r\n        <p>Currently I'm searching for my first big break into the tech industry. I'm hoping to find a gig in my native Vancouver, WA or its sister-city, Portland, OR; however, I am also open to relocating and have searched for positions in Seattle, San-Francisco, Spokane, and Vancouver BC.</p>\r\n        <p>I've acquired certification in Python, HTML/CSS, JavaScript, and Django. I am presently also taking classes for Node.js and React (which I used to craft the lovely page before you) and continue to have a side-fascination with Java as a language.</p>\r\n        <p>My current goal is to create a React-Native app which I will then publish on the Google Play Store. My ideal job would be one where I not only would be able to utilize the coding expertise that I have learned, but one that would also encourage me to add even more coding languages/frameworks to my repertoire (Ruby, C#, and angular to name a few).</p>\r\n        <p>If you would like to contact me, feel free to check out my [contact page].</p>\r\n        <p>Thanks for stopping by!</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\nexport default Hero;","import React from \"react\";\r\n\r\nimport { Footer, Container, Content } from \"react-bulma-components\";\r\n\r\nimport './Footer.css'\r\n\r\nconst FootBar = () => (\r\n  <Footer className=\"Footer\">\r\n    <Container>\r\n      <Content className=\"Content\">\r\n        <div className=\"foot-text\">\r\n          <p id=\"copyright\">&copy;2019 Gregory Cruz</p>\r\n          <p id=\"pexels\">\r\n            Images via <a href=\"https://www.pexels.com/\">Pexels.com</a>\r\n          </p>\r\n        </div>\r\n      </Content>\r\n    </Container>\r\n  </Footer>\r\n);\r\n\r\nexport default FootBar;\r\n","import React from \"react\";\r\n\r\nimport Header from '../components/navigation/Header';\r\nimport Hero from '../components/Hero';\r\nimport Footer from '../components/navigation/Footer';\r\n\r\nconst Home = () => (\r\n    <React.Fragment>\r\n        <Header />\r\n        <Hero />\r\n        <Footer />\r\n    </React.Fragment>\r\n)\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faLinkedin, faGithubSquare } from '@fortawesome/free-brands-svg-icons'\r\n\r\nimport './Info.css'\r\n\r\nconst Info = () => (\r\n  <div className=\"Info\">\r\n    <h1 className=\"Heading\">Important Links and How to Reach Me.</h1>\r\n    <div className=\"Contact\">\r\n      {/* Here will be a contact-me form tied to my email. */}\r\n      <div className=\"Icons\">\r\n        <FontAwesomeIcon className=\"GitHub\" icon={faGithubSquare} size=\"6x\" />\r\n        <FontAwesomeIcon className=\"LinkedIn\" icon={faLinkedin} size=\"6x\" />\r\n      </div>\r\n      <form>\r\n        <p className=\"MiniHead\">Send me a message, I'd love to hear from you!</p>\r\n        <div className=\"Input\">\r\n          <div className=\"Title\">\r\n            <input type=\"text\" className=\"subject\" placeholder=\"Title...\" />\r\n          </div>\r\n          <div className=\"Body\">\r\n            <textarea className=\"body\" placeholder=\"Body...\"></textarea>\r\n          </div>\r\n          <button type=\"submit\" className=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n      {/* Here will be icons for my LinkedIn and GetHub with links to each embedded. */}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Info;\r\n","import React from \"react\";\r\n\r\nimport Header from '../components/navigation/Header';\r\nimport Info from '../components/Info';\r\nimport Footer from '../components/navigation/Footer';\r\n\r\n\r\nconst Contact = () => (\r\n    <React.Fragment>\r\n        <Header />\r\n        <Info />\r\n        <Footer />\r\n    </React.Fragment>\r\n);\r\n\r\nexport default Contact;\r\n","import React from \"react\";\nimport 'react-bulma-components/dist/react-bulma-components.min.css';\n\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\n\nimport Home from './pages/Home';\nimport Contact from './pages/Contact';\n\nfunction App() {\n  return (\n  <main>\n    <Router>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/contact\" exact component={Contact} />\n    </Router>\n  </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}